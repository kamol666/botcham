<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>UzCard Payment</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #141414;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .container {
            background-color: #302d2d;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 450px;
            padding: 30px;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .header .logo {
            margin-bottom: 15px;
            display: flex;
            justify-content: center;
        }
        .header .logo img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
        }
        .header h1 {
            color: #ffffff;
            font-size: 24px;
            margin: 0;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            color: #ffffff;
            font-weight: 500;
        }
        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #444;
            background-color: #222;
            color: #fff;
            border-radius: 6px;
            font-size: 16px;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }
        input::placeholder {
            color: #777;
        }
        input:focus {
            border-color: #004B93;
            outline: none;
        }
        .card-row {
            display: flex;
            gap: 15px;
        }
        .card-row .form-group:first-child {
            flex: 2;
        }
        .card-row .form-group:last-child {
            flex: 1;
        }
        button {
            background-color: #004B93;
            color: white;
            border: none;
            border-radius: 6px;
            padding: 14px;
            font-size: 16px;
            font-weight: 600;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #003670;
        }
        .error {
            color: #ff6b6b;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        .global-error {
            color: #ff6b6b;
            font-size: 14px;
            margin-top: 10px;
            margin-bottom: 10px;
            text-align: center;
            padding: 10px;
            background-color: rgba(255, 107, 107, 0.1);
            border-radius: 6px;
            display: none;
        }
        .card-icon {
            position: absolute;
            right: 10px;
            top: 12px;
            color: #999;
        }
        .relative {
            position: relative;
        }
        .footer {
            text-align: center;
            margin-top: 25px;
            color: #aaa;
            font-size: 14px;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="header">
        <div class="logo">
            <img src="/img.png" alt="Yulduzlar bashorati Logo">
        </div>

        <h1>Yulduzlar bashorati Premium</h1>
    </div>

    <div class="global-error" id="globalError"></div>

    <form id="cardForm">
        <div class="form-group">
            <label for="cardNumber">Karta Raqam</label>
            <div class="relative">
                <input type="text" id="cardNumber" name="cardNumber" autocomplete="cc-number" placeholder="0000 0000 0000 0000" maxlength="19" inputmode="numeric" pattern="[0-9 ]*">
            </div>
            <div class="error" id="cardNumberError">Iltimos to'g'ri karta raqam kiriting</div>
        </div>

        <div class="card-row">
            <div class="form-group">
                <label for="expireDate">Amal qilish muddati</label>
                <input type="text" id="expireDate" name="expireDate" autocomplete="cc-exp" placeholder="MM/YY" maxlength="5" inputmode="numeric" pattern="[0-9/]*">
                <div class="error" id="expireDateError">Iltimos amal qilish muddatini to'g'ri kiriting</div>
            </div>
        </div>

        <div class="form-group">
            <label for="phoneNumber">Telefon Raqam</label>
            <input type="tel" id="phoneNumber" name="phoneNumber" autocomplete="tel" placeholder="998 XX XXX XX XX" maxlength="12" inputmode="numeric" pattern="[0-9 ]*">
            <div class="error" id="phoneNumberError">Iltimos to'g'ri telefon raqam kiriting</div>
        </div>

        <div class="form-group">
            <button type="submit" id="submitBtn">Yuborish</button>
        </div>
    </form>

    <div class="footer">

    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get('userId');
        const telegramId = urlParams.get('telegramId');
        const selectedService = urlParams.get('selectedService');

        console.log(`UserId is: ${userId}`);
        console.log(`TelegramId is: ${telegramId}`);

        // Card number formatting
        const cardInput = document.getElementById('cardNumber');
        cardInput.addEventListener('input', function(e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.length > 0) {
                value = value.match(new RegExp('.{1,4}', 'g')).join(' ');
            }
            e.target.value = value;
        });

        // Expiry date formatting
        const expiryInput = document.getElementById('expireDate');
        expiryInput.addEventListener('input', function(e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.length > 2) {
                value = value.substring(0, 2) + '/' + value.substring(2, 4);
            }
            e.target.value = value;
        });

        // Phone number formatting - modified version
        const phoneInput = document.getElementById('phoneNumber');
        phoneInput.addEventListener('input', function(e) {
            // Get the cursor position before we modify the value
            const cursorPosition = e.target.selectionStart;
            const previousValue = e.target.value;

            // Only keep digits
            let value = e.target.value.replace(/\D/g, '');

            // Only enforce the 998 prefix when the field is empty and the user starts typing
            if (previousValue === '' && value.length > 0 && !value.startsWith('998')) {
                value = '998' + value;
            }

            // Set the value
            e.target.value = value;

            // If the user was deleting characters, respect that
            if (previousValue.length > value.length) {
                // Keep the cursor at the right position after deletion
                e.target.setSelectionRange(cursorPosition, cursorPosition);
            }
        });

        // Function to display global error messages
        function showGlobalError(message) {
            const globalErrorEl = document.getElementById('globalError');
            globalErrorEl.textContent = message;
            globalErrorEl.style.display = 'block';

            // Automatically hide after 5 seconds
            setTimeout(() => {
                globalErrorEl.style.display = 'none';
            }, 5000);
        }

        // Function to hide global error messages
        function hideGlobalError() {
            document.getElementById('globalError').style.display = 'none';
        }

        // Form submission
        const form = document.getElementById('cardForm');
        form.addEventListener('submit', async function(e) {
            e.preventDefault();

            // Reset errors
            document.querySelectorAll('.error').forEach(el => el.style.display = 'none');
            hideGlobalError();

            // Get values
            const cardNumber = cardInput.value.replace(/\s/g, '');
            let  expireDate = expiryInput.value.replace('/', '');
            const phoneNumber = phoneInput.value;

            if (expireDate.length === 4) {
                expireDate = expireDate.substring(2, 4) + expireDate.substring(0, 2);
            }

            let isValid = true;

            // Basic validation
            if (!/^\d{16}$/.test(cardNumber)) {
                document.getElementById('cardNumberError').style.display = 'block';
                isValid = false;
            }

            if (!/^\d{4}$/.test(expireDate)) {
                document.getElementById('expireDateError').style.display = 'block';
                isValid = false;
            }

            if (!/^998\d{9}$/.test(phoneNumber)) {
                document.getElementById('phoneNumberError').style.display = 'block';
                isValid = false;
            }

            if (isValid) {
                // Show loading state
                const submitBtn = document.getElementById('submitBtn');
                const originalBtnText = submitBtn.textContent;
                submitBtn.disabled = true;
                submitBtn.textContent = 'Processing...';

                try {
                    // Call API to create card token
                    const requestData = {
                        cardNumber: cardNumber,
                        expireDate: expireDate,
                        userPhone: phoneNumber,
                        userId: userId,
                        telegramId: telegramId,
                    };

                    const response = await fetch('add-card', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(requestData)
                    });

                    const data = await response.json();

                    if (data.success) {
                        const session = data.session;
                        const otpSentPhone = data.otpSentPhone;

                        // Redirect to SMS verification page
                        window.location.href = `uzcard-verify-sms?session=${session}&phone=${otpSentPhone}&userId=${userId}&telegramId=${telegramId}&selectedService=${selectedService}`;
                    } else {
                        // Handle specific error codes
                        switch(data.errorCode) {
                            case '-101':
                                document.getElementById('cardNumberError').textContent = data.message;
                                document.getElementById('cardNumberError').style.display = 'block';
                                break;
                            case '-103':
                                document.getElementById('expireDateError').textContent = data.message;
                                document.getElementById('expireDateError').style.display = 'block';
                                break;
                            case '-104':
                            case '-108':
                            case '-110':
                            case '-120':
                            case '-130':
                                showGlobalError(data.message);
                                break;
                            default:
                                showGlobalError(data.message || 'Kutilmagan xatolik yuz berdi. Iltimos qaytadan urinib ko\'ring.');
                        }

                        // Reset button state
                        submitBtn.disabled = false;
                        submitBtn.textContent = originalBtnText;
                    }
                } catch (error) {
                    console.error('Error:', error);
                    // Show error message to user
                    showGlobalError('Serverda xatolik yuz berdi. Iltimos qaytadan urinib ko\'ring.');

                    // Reset button state
                    submitBtn.disabled = false;
                    submitBtn.textContent = originalBtnText;
                }
            }
        });
    });
</script>
</body>
</html>