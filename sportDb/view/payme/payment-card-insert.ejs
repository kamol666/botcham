<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Payme Payment</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f7;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            padding: 30px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header .logo {
            margin-bottom: 15px;
            display: flex;
            justify-content: center;
        }

        .header h1 {
            color: #333;
            font-size: 24px;
            margin: 0;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            background-color: #fff;
            color: #333;
            border-radius: 6px;
            font-size: 16px;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }

        input::placeholder {
            color: #999;
        }

        input:focus {
            border-color: #00b5a8;
            outline: none;
        }

        .card-row {
            display: flex;
            gap: 15px;
        }

        .card-row .form-group:first-child {
            flex: 2;
        }

        .card-row .form-group:last-child {
            flex: 1;
        }

        button {
            background-color: #00b5a8;
            color: white;
            border: none;
            border-radius: 6px;
            padding: 14px;
            font-size: 16px;
            font-weight: 600;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #009b90;
        }

        .error {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }

        .card-icon {
            position: absolute;
            right: 10px;
            top: 12px;
            color: #999;
        }

        .relative {
            position: relative;
        }

        .footer {
            text-align: center;
            margin-top: 25px;
            color: #777;
            font-size: 14px;
        }

        .powered-by {
            text-align: center;
            margin-top: 20px;
            font-size: 12px;
            color: #777;
        }

        .offer-link {
            color: #00b5a8;
            text-decoration: none;
        }

        .offer-link:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="header">
        <div class="logo">
            <svg xmlns="http://www.w3.org/2000/svg" width="160" height="50" viewBox="0 0 60 18">
                <g>
                    <path fill="#00B5A8"
                          d="M3.67,0h48.02c.55,0,1.03.22,1.3.66l4.79,7.77c.37.61.3,1.35-.22,1.96l-6.75,7.77c-.37.42-.85.67-1.39.67H1.53c-.95,0-1.63-.74-1.52-1.67L1.79,1.67c.11-.95.93-1.67,1.87-1.67"/>
                    <path fill="#FFFFFF"
                          d="M32.32,13.32l.74-5.91c.5-.34,1.07-.61,1.55-.61.63,0,.94.47.84,1.28l-.65,5.25h2.28l.71-5.73.02-.16c.5-.34,1.08-.63,1.57-.63.63,0,.94.47.84,1.28l-.65,5.25h2.28l.71-5.73c.19-1.6-.63-2.57-2.1-2.57-1.02,0-2.1.58-2.82,1.11-.31-.71-.98-1.11-1.94-1.11s-1.87.47-2.6.95l.1-.73h-2.13l-1.02,8.07h2.28ZM45.78,8.54c.23-1.07,1-1.69,1.95-1.69s1.47.53,1.47,1.39c0,.1,0,.21-.01.31h-3.41ZM43.39,9.62c-.03,2.02,1.44,3.89,4.44,3.89,1.07,0,1.97-.21,2.78-.71l.16-1.9c-.66.4-1.66.68-2.53.68-1.15,0-2.18-.5-2.47-1.66h5.58c.08-.21.15-.71.15-1.19,0-2.13-1.18-3.68-3.6-3.68s-4.47,1.44-4.5,4.58M15.68,10.96c0-.87,1.02-1.2,2.07-1.2h1.07l-.16,1.31c-.45.36-1.26.73-1.94.73-.61,0-1.03-.34-1.03-.84M13.4,11.14c-.02,1.31,1.05,2.37,2.68,2.37,1.15,0,1.99-.49,2.47-1.02l-.1.82h2.2l.53-4.37c.26-2.16-.45-3.92-3.23-3.92-1.13,0-2.5.26-3.24.74l-.23,1.81c.6-.32,1.76-.72,2.82-.72,1.28,0,1.73.64,1.68,1.31h-1.36c-1.97,0-4.21.76-4.23,2.97M7.09,11.35l.5-3.97c.49-.39,1.03-.55,1.52-.53.97.01,1.5.79,1.5,2,0,1.57-.82,2.91-2.21,2.91-.44,0-.94-.14-1.31-.4M4.27,15.98h2.26l.37-3.05c.36.27,1.02.58,1.86.58,2.62,0,4.21-2.31,4.21-4.83,0-2.15-1.02-3.65-2.92-3.65-.9,0-1.73.29-2.36.81l.08-.6h-2.19l-1.31,10.73ZM28.02,5.25l-2.45,5.58-1.28-5.58h-2.52l2.24,8.09-1.31,2.65h2.48l5.28-10.73h-2.45Z"/>
                </g>
            </svg>
        </div>

        <h1>Sports Uz Premium</h1>
    </div>

    <form id="cardForm">
        <div class="form-group">
            <label for="cardNumber">Karta Raqam</label>
            <div class="relative">
                <input type="text" id="cardNumber" placeholder="0000 0000 0000 0000" maxlength="19" inputmode="numeric" pattern="[0-9 ]*">
            </div>
            <div class="error" id="cardNumberError">Iltimos to'g'ri karta raqam kiriting</div>
        </div>

        <div class="card-row">
            <div class="form-group">
                <label for="expireDate">Amal qilish muddati</label>
                <input type="text" id="expireDate" placeholder="MM/YY" maxlength="5" inputmode="numeric" pattern="[0-9/]*">
                <div class="error" id="expireDateError">Iltimos amal qilish muddatini to'g'ri kiriting</div>
            </div>
        </div>

        <div class="form-group">
            <button type="submit" id="submitBtn">Yuborish</button>
        </div>
    </form>


    <div class="powered-by">
        <a href="https://cdn.payme.uz/terms/main.html?target=_blank" class="offer-link" target="_blank">Payme Offer</a>
        | Powered by Payme
    </div>
</div>

<!-- Updated payment form with error handling -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get('userId');
        const planId = urlParams.get('planId');
        const selectedSport = urlParams.get('selectedSport');

        // Card number formatting
        const cardInput = document.getElementById('cardNumber');
        cardInput.addEventListener('input', function (e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.length > 0) {
                value = value.match(new RegExp('.{1,4}', 'g')).join(' ');
            }
            e.target.value = value;
        });

        // Expiry date formatting
        const expiryInput = document.getElementById('expireDate');
        expiryInput.addEventListener('input', function (e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.length > 2) {
                value = value.substring(0, 2) + '/' + value.substring(2, 4);
            }
            e.target.value = value;
        });

        // Form submission
        const form = document.getElementById('cardForm');
        form.addEventListener('submit', async function (e) {
            e.preventDefault();

            // Reset errors
            document.querySelectorAll('.error').forEach(el => el.style.display = 'none');

            // Get values
            const cardNumber = cardInput.value.replace(/\s/g, '');
            const expireDate = expiryInput.value.replace('/', '');

            let isValid = true;

            // Basic validation
            if (!/^\d{16}$/.test(cardNumber)) {
                document.getElementById('cardNumberError').style.display = 'block';
                isValid = false;
            }

            if (!/^\d{4}$/.test(expireDate)) {
                document.getElementById('expireDateError').style.display = 'block';
                isValid = false;
            }

            if (isValid) {
                // Show loading state
                const submitBtn = document.getElementById('submitBtn');
                const originalBtnText = submitBtn.textContent;
                submitBtn.disabled = true;
                submitBtn.textContent = 'Processing...';

                try {
                    // Call API to create card token
                    const requestData = {
                        number: cardNumber,
                        expire: expireDate,
                        userId: userId,
                        planId: planId,
                        selectedSport: selectedSport
                    };

                    const response = await fetch('card-token', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(requestData)
                    });

                    const data = await response.json();

                    if (data.success) {
                        // Redirect to SMS verification page if token was created successfully
                        window.location.href = `verify-sms?token=${data.token}&userId=${userId}&planId=${planId}&selectedSport=${selectedSport}`;
                    } else {
                        // Show error message from API
                        if (data.error && data.error.code === -31300) {
                            document.getElementById('cardNumberError').textContent = data.error.message;
                            document.getElementById('cardNumberError').style.display = 'block';
                        } else if (data.error && data.error.code === -31301) {
                            document.getElementById('expireDateError').textContent = data.error.message;
                            document.getElementById('expireDateError').style.display = 'block';
                        } else {
                            // Generic error
                            alert(data.error?.message || 'There was an error processing your card. Please try again.');
                        }
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('There was an error processing your card. Please try again.');
                } finally {
                    // Reset button state
                    submitBtn.disabled = false;
                    submitBtn.textContent = originalBtnText;
                }
            }
        });
    });
</script>
</body>
</html>